/*
 * container.cpp
 *
 *  Created on: 6 Nov 2022
 *      Author: student
 */

#include "CliContainer.h"
#include <stdio.h>
#include <cstring>
#include "Communication.h"


CliContainer::CliContainer()
{
	m_counter = 0;
	memset(m_CliCommand, NULL, sizeof(CliCommand)* MAX_CLI);
}

CliContainer::~CliContainer()
{
	for (int i = 0; i < MAX_CLI; i++) {
		if (m_CliCommand[i] != NULL) {
			delete m_CliCommand[i];
		}
	}
}

void CliContainer::add(CliCommand* pCliCommand)
{
	if (m_counter < MAX_CLI) {
		m_CliCommand[m_counter] = pCliCommand;
		m_counter++;
	}
}

void CliContainer::cliInit(){
	//////////////////ledR//////////////////////////////
	Communication_registerCommand("ledR", "on", Cli_cmdLedOn, &ledR);
	Communication_registerCommand("ledR", "off", Cli_cmdLedOff, &ledR);
	Communication_registerCommand("ledR", "blink", Cli_cmdLedBlink, &ledR);

	//////////////////ledB//////////////////////////////
	Communication_registerCommand("ledB", "on", Cli_cmdLedOn, &ledB);
    Communication_registerCommand("ledB", "off", Cli_cmdLedOff, &ledB);
    Communication_registerCommand("ledB", "blink", Cli_cmdLedBlink, &ledB);

    //////////////////ledbright////////////////////////
    Communication_registerCommand("led", "bright", Cli_cmdLedOn, &ledB);

    /////////////////buzzer//////////////////////////////
    Communication_registerCommand("buzzer", "on", Cli_cmdBuzzerOn, &buzzer);
    Communication_registerCommand("buzzer", "off", Cli_cmdBuzzerOff, &buzzer);

    ///////////////flash////////////////////////////////
    Communication_registerCommand("flash", "on", Cli_cmdFlashOn, &flash);
}

